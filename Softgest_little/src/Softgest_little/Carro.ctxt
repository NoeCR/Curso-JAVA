#BlueJ class context
comment0.target=Carro
comment1.params=cliente
comment1.target=Carro(Cliente)
comment1.text=\r\n\ Constructor\ de\ la\ clase\ carro,\ un\ carro\ establece\ una\ relacion\ entre\ un\ unico\ cliente\ y\ un\ o\ una\ coleccion\ de\ articulos\r\n\ Un\ carro\ tendra\ como\ campos\ una\ coleccion\ de\ articulos,\ un\ unico\ cliente\ y\ un\ total\ que\ sera\ el\ acumulado\ de\ todos\ los\ articulos\r\n
comment10.params=
comment10.target=int\ getNumarts()
comment11.params=
comment11.target=void\ facturar()
comment12.params=
comment12.target=void\ showfactura()
comment2.params=articulo
comment2.target=void\ addArticulo(Articulo)
comment2.text=\r\n\ este\ metodo\ a\u00F1ade\ un\ articulo\ a\ la\ coleccion.\ Si\ \ se\ encuentra\ dicho\ articulo,\ en\ lugar\ de\ a\u00F1adirlo\ llama\ al\ metodo\ setCount\ que\r\n\ incrementa\ en\ una\ unidad\ ese\ articulo\r\n
comment3.params=
comment3.target=void\ displayCart()
comment3.text=\r\n\ Este\ metodo\ imprime\ el\ cliente\ con\ el\ que\ se\ a\ creado\ el\ carro\ y\ la\ coleccion\ de\ articulos\ si\ los\ hay,\ y\ por\ ultimo\ el\ total\ del\ pedido\ \r\n
comment4.params=valor
comment4.target=void\ setTotal(double)
comment5.params=
comment5.target=double\ getTotal()
comment6.params=
comment6.target=void\ resetTotal()
comment7.params=cantidad\ articulo
comment7.target=void\ realizarPedido(int,\ Articulo)
comment8.params=valor
comment8.target=void\ aumentarCartera(int)
comment9.params=
comment9.target=void\ vaciarCarro()
comment9.text=\r\n\ Este\ metodo\ elimina\ todos\ los\ articulos\ del\ carro\ y\ resetea\ el\ valor\ del\ total\ a\ 0\r\n
numComments=13
